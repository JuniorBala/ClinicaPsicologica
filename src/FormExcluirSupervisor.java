/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;

public class FormExcluirSupervisor extends javax.swing.JFrame {
    String nomeStatic = null;
    String drtStatic = null;
    /**
     * Creates new form FormExcluirSupervisor
     */
    public FormExcluirSupervisor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomeSupervisor = new javax.swing.JTextField();
        labRG = new javax.swing.JLabel();
        txtDRT = new javax.swing.JTextField();
        labEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        labCEP = new javax.swing.JLabel();
        txtCEP = new javax.swing.JTextField();
        labTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        btnExcluirSupervisor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Excluir Supervisor");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Supervisor:"));

        labNome.setText("NOME DO SUPERVISOR :");

        txtNomeSupervisor.setToolTipText("Supervisor");
        txtNomeSupervisor.setEnabled(false);
        txtNomeSupervisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeSupervisorActionPerformed(evt);
            }
        });

        labRG.setText("DRT:");

        txtDRT.setToolTipText("DRT");
        txtDRT.setEnabled(false);
        txtDRT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDRTKeyTyped(evt);
            }
        });

        labEndereco.setText("ENDEREÇO :");
        labEndereco.setToolTipText("");

        txtEndereco.setToolTipText("Endereço");
        txtEndereco.setEnabled(false);

        labCEP.setText("CEP :");

        txtCEP.setToolTipText("CEP");
        txtCEP.setEnabled(false);
        txtCEP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCEPKeyTyped(evt);
            }
        });

        labTelefone.setText("TELEFONE :");

        txtTelefone.setToolTipText("Telefone");
        txtTelefone.setEnabled(false);
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labNome)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNomeSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labRG)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtDRT, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labEndereco)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtEndereco)))
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labTelefone)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTelefone))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labCEP)
                            .addGap(18, 18, 18)
                            .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomeSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labRG)
                    .addComponent(txtDRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labEndereco)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labCEP)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnExcluirSupervisor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mult.png"))); // NOI18N
        btnExcluirSupervisor.setText("Excluir Supervisor");
        btnExcluirSupervisor.setToolTipText("Excluir Supervisor");
        btnExcluirSupervisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirSupervisorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(btnExcluirSupervisor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirSupervisor)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeSupervisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeSupervisorActionPerformed

    }//GEN-LAST:event_txtNomeSupervisorActionPerformed

    private void txtDRTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDRTKeyTyped
        
    }//GEN-LAST:event_txtDRTKeyTyped

    private void txtCEPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCEPKeyTyped
        
    }//GEN-LAST:event_txtCEPKeyTyped

    private void txtTelefoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyTyped
        
    }//GEN-LAST:event_txtTelefoneKeyTyped

    private void btnExcluirSupervisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirSupervisorActionPerformed
        FormProcurarSupervisor_Excluir procurarSupervisor = new FormProcurarSupervisor_Excluir();
        String retNome = procurarSupervisor.retornoNome;
        String retDRT = procurarSupervisor.retornoDRT;
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();

            //obter os dados digitados

            String comando = null;
            if (nomeStatic == null) {
                comando = "DELETE FROM Supervisor WHERE DRT = '" + drtStatic + "';";
            } else if (drtStatic == null) {
                comando = "DELETE FROM Supervisor WHERE NomeSupervisor = '" + nomeStatic + "';";
            }

            st.execute(comando);
            JOptionPane.showMessageDialog(null, "Supervisor EXCLUIDO com sucesso !");

            //fecha a conexão2
            st.close();
            c.close();

            procurarSupervisor.retornoNome = null;
            procurarSupervisor.retornoDRT = null;
            
            this.dispose();
        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null,
                    " Driver JDBC não encontrado !\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null,
                    " Problemas na conexão com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_btnExcluirSupervisorActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        FormProcurarSupervisor_Excluir procurarSupervisor = new FormProcurarSupervisor_Excluir();
        String retNome = procurarSupervisor.retornoNome;
        String retDRT = procurarSupervisor.retornoDRT;
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");
            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            // definir o comando SELECt 

            ResultSet rs = null;
            if (retNome == null) {
                rs = st.executeQuery("SELECT * FROM Supervisor WHERE DRT = '" + retDRT + "';");
                drtStatic = retDRT;
            } else if (retDRT == null) {
                rs = st.executeQuery("SELECT * FROM Supervisor WHERE NomeSupervisor = '" + retNome + "';");
                nomeStatic = retNome;
            }
            
            procurarSupervisor.retornoNome = null;
            procurarSupervisor.retornoDRT = null;
            
            String nome = null;
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {

                nome = rs.getString("NomeSupervisor");
                String drt = rs.getString("DRT");
                String endereco = rs.getString("Endereco");
                int cep = rs.getInt("CEP");
                String telefone = rs.getString("Telefone");

                txtNomeSupervisor.setText(nome);
                txtDRT.setText(drt);
                txtEndereco.setText(endereco);
                txtCEP.setText(String.valueOf(cep));
                txtTelefone.setText(telefone);
            }
            if(nome == null){
                JOptionPane.showMessageDialog(null, "Desculpe! O SUPERVISOR não existe.", "Erro", JOptionPane.WARNING_MESSAGE);
                this.dispose();
                procurarSupervisor.setVisible(true);
                procurarSupervisor.setLocationRelativeTo(null);
            }
            //fecha a conexão
            st.close();
            c.close();

        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado!\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormExcluirSupervisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormExcluirSupervisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormExcluirSupervisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormExcluirSupervisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormExcluirSupervisor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluirSupervisor;
    private javax.swing.JLabel labCEP;
    private javax.swing.JLabel labEndereco;
    private javax.swing.JLabel labNome;
    private javax.swing.JLabel labRG;
    private javax.swing.JLabel labTelefone;
    private javax.swing.JPanel painel1;
    private javax.swing.JTextField txtCEP;
    private javax.swing.JTextField txtDRT;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNomeSupervisor;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
