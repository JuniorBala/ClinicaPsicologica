/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.HashMap;

public class FormInserirAtendente extends javax.swing.JFrame {
    static int id;
    HashMap<String, Integer> myMap;
    /**
     * Creates new form FormInserirAtendente
     */
    public FormInserirAtendente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomeAtendente = new javax.swing.JTextField();
        labRG = new javax.swing.JLabel();
        txtTIA = new javax.swing.JTextField();
        labEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        labCEP = new javax.swing.JLabel();
        txtCEP = new javax.swing.JTextField();
        labTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        labNomeSupervisor = new javax.swing.JLabel();
        cbNomeSupervisor = new javax.swing.JComboBox();
        btnInserirAtendente = new javax.swing.JButton();
        btnLimparCampos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserir Atendente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Atendente:"));

        labNome.setText("NOME DO ATENDENTE :");

        txtNomeAtendente.setToolTipText("Inserir Atendente");
        txtNomeAtendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeAtendenteActionPerformed(evt);
            }
        });
        txtNomeAtendente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeAtendenteKeyTyped(evt);
            }
        });

        labRG.setText("TIA :");

        txtTIA.setToolTipText("Inserir TIA");
        txtTIA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTIAKeyTyped(evt);
            }
        });

        labEndereco.setText("ENDEREÇO :");
        labEndereco.setToolTipText("");

        txtEndereco.setToolTipText("Inserir Endereço");
        txtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEnderecoKeyTyped(evt);
            }
        });

        labCEP.setText("CEP :");

        txtCEP.setToolTipText("Inserir CEP");
        txtCEP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCEPKeyTyped(evt);
            }
        });

        labTelefone.setText("TELEFONE :");

        txtTelefone.setToolTipText("Inserir Telefone");
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyTyped(evt);
            }
        });

        labNomeSupervisor.setText("SUPERVISOR :");

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labNome)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labRG)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTIA, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labEndereco)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtEndereco)))
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labNomeSupervisor)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbNomeSupervisor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labTelefone)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTelefone))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labCEP)
                            .addGap(18, 18, 18)
                            .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labRG)
                    .addComponent(txtTIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labEndereco)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labCEP)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNomeSupervisor)
                    .addComponent(cbNomeSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnInserirAtendente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Botoes_Site_5746_Knob_Valid_Blue.png"))); // NOI18N
        btnInserirAtendente.setText("Inserir");
        btnInserirAtendente.setToolTipText("Inserir Atendente");
        btnInserirAtendente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnInserirAtendenteStateChanged(evt);
            }
        });
        btnInserirAtendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirAtendenteActionPerformed(evt);
            }
        });

        btnLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Refresh.png"))); // NOI18N
        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.setToolTipText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInserirAtendente)
                .addGap(18, 18, 18)
                .addComponent(btnLimparCampos)
                .addGap(107, 107, 107))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserirAtendente)
                    .addComponent(btnLimparCampos))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeAtendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeAtendenteActionPerformed

    }//GEN-LAST:event_txtNomeAtendenteActionPerformed

    private void txtTIAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTIAKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String tia = txtTIA.getText();
        x = tia.length();
        if(x == 12){
            evt.consume();
        }
    }//GEN-LAST:event_txtTIAKeyTyped

    private void txtCEPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCEPKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String cep = txtCEP.getText();
        x = cep.length();
        if(x == 11){
            evt.consume();
        }
    }//GEN-LAST:event_txtCEPKeyTyped

    private void txtTelefoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String tel = txtTelefone.getText();
        x = tel.length();
        if(x == 15){
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefoneKeyTyped

    private void btnInserirAtendenteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnInserirAtendenteStateChanged

    }//GEN-LAST:event_btnInserirAtendenteStateChanged

    private void btnInserirAtendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirAtendenteActionPerformed
        String txt1 = txtNomeAtendente.getText();
        String txt2 = txtTIA.getText();
        String txt3 = txtEndereco.getText();
        String txt4 = txtCEP.getText();
        String txt5 = txtTelefone.getText();
        if (txt1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o NOME DO ATENDENTE !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtNomeAtendente.grabFocus();
        } else if (txt2.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o TIA !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtTIA.grabFocus();
        } else if (txt3.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o ENDEREÇO !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtEndereco.grabFocus();
        } else if (txt4.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o CEP !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtCEP.grabFocus();
        } else if (txt5.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o TELEFONE !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtTelefone.grabFocus();
        } else if (cbNomeSupervisor.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Não tem SUPERVISOR !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            this.dispose();
            FormInserirSupervisor inserirSupervisor = new FormInserirSupervisor();
            inserirSupervisor.setVisible(true);
            inserirSupervisor.setLocationRelativeTo(null);
        } else {
            try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();

            //obter os dados digitados
            String nome = txtNomeAtendente.getText();
            String tia = txtTIA.getText();
            String endereco = txtEndereco.getText();
            String cep = txtCEP.getText();
            String telefone = txtTelefone.getText();
            
            ResultSet rs = st.executeQuery("SELECT * FROM Atendente");
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {
                String tiaAtendente = rs.getString("TIA");
                if (tiaAtendente.equalsIgnoreCase(tia)) {
                    JOptionPane.showMessageDialog(null, "Este TIA já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtTIA.setText("");
                    txtTIA.grabFocus();
                    return;
                }
                String nomeAtendente = rs.getString("NomeAtendente");
                if (nomeAtendente.equalsIgnoreCase(nome)) {
                    JOptionPane.showMessageDialog(null, "Este NOME já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtNomeAtendente.setText("");
                    txtNomeAtendente.grabFocus();
                    return;
                }
            }
            
            String comando = "INSERT INTO Atendente (NomeAtendente, TIA, Endereco, CEP, Telefone, idSupervisor) VALUES('" + nome + "', '" + tia + "', '" + endereco + "', " + cep + ", '" + telefone + "', " + myMap.get(cbNomeSupervisor.getSelectedItem()) + ")";

            st.execute(comando);
            JOptionPane.showMessageDialog(null, "Atendente INCLUIDO com sucesso !");

            //fecha a conexão2
            st.close();
            c.close();

            limparCampos();
            txtNomeAtendente.grabFocus();
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado !\n  " + erro.toString());
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
            }
           }    
    }//GEN-LAST:event_btnInserirAtendenteActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
        txtNomeAtendente.grabFocus();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        myMap = new HashMap<String, Integer>();
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");
            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            // definir o comando SELECt 
            
            ResultSet rs = st.executeQuery("SELECT idSupervisor, NomeSupervisor FROM Supervisor;");
            
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {

                id = rs.getInt("idSupervisor");
                String nome = rs.getString("NomeSupervisor");
                myMap.put(nome, id);
                cbNomeSupervisor.addItem(nome);
            }
            
            //fecha a conexão
            st.close();
            c.close();

        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado!\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtNomeAtendenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeAtendenteKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)){
            if(!Character.isWhitespace(c)){
                evt.consume();
            }
        }
        int x = 0;
        String nome = txtNomeAtendente.getText();
        x = nome.length();
        if(x == 45){
            evt.consume();
        }
    }//GEN-LAST:event_txtNomeAtendenteKeyTyped

    private void txtEnderecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoKeyTyped
        int x = 0;
        String endereco = txtEndereco.getText();
        x = endereco.length();
        if(x == 35){
            evt.consume();
        }
    }//GEN-LAST:event_txtEnderecoKeyTyped

    private void limparCampos() {
        txtNomeAtendente.setText("");
        txtTIA.setText("");
        txtEndereco.setText("");
        txtCEP.setText("");
        txtTelefone.setText("");
        cbNomeSupervisor.setSelectedIndex(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormInserirAtendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormInserirAtendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormInserirAtendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormInserirAtendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormInserirAtendente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInserirAtendente;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JComboBox cbNomeSupervisor;
    private javax.swing.JLabel labCEP;
    private javax.swing.JLabel labEndereco;
    private javax.swing.JLabel labNome;
    private javax.swing.JLabel labNomeSupervisor;
    private javax.swing.JLabel labRG;
    private javax.swing.JLabel labTelefone;
    private javax.swing.JPanel painel1;
    private javax.swing.JTextField txtCEP;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNomeAtendente;
    private javax.swing.JTextField txtTIA;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
