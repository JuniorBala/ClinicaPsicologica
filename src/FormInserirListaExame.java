/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;

import javax.swing.*;

public class FormInserirListaExame extends javax.swing.JFrame {

    /**
     * Creates new form FormInserirListaExame
     */
    public FormInserirListaExame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomeExame = new javax.swing.JTextField();
        labCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnInserirExame = new javax.swing.JButton();
        btnLimparCampos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserir Exame");
        setResizable(false);

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Exame:"));

        labNome.setText("NOME DO EXAME :");

        txtNomeExame.setToolTipText("Inserir Nome do Exame");
        txtNomeExame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeExameActionPerformed(evt);
            }
        });
        txtNomeExame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeExameKeyTyped(evt);
            }
        });

        labCodigo.setText("CÓDIGO :");

        txtCodigo.setToolTipText("Inserir Código");
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeExame, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomeExame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnInserirExame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Botoes_Site_5746_Knob_Valid_Blue.png"))); // NOI18N
        btnInserirExame.setText("Inserir");
        btnInserirExame.setToolTipText("Inserir Exame");
        btnInserirExame.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnInserirExameStateChanged(evt);
            }
        });
        btnInserirExame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirExameActionPerformed(evt);
            }
        });

        btnLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Refresh.png"))); // NOI18N
        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.setToolTipText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInserirExame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimparCampos)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserirExame)
                    .addComponent(btnLimparCampos))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeExameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeExameActionPerformed

    }//GEN-LAST:event_txtNomeExameActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String codigo = txtCodigo.getText();
        x = codigo.length();
        if(x == 11){
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void btnInserirExameStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnInserirExameStateChanged

    }//GEN-LAST:event_btnInserirExameStateChanged

    private void btnInserirExameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirExameActionPerformed
        String txt1 = txtNomeExame.getText();
        String txt2 = txtCodigo.getText();
        if (txt1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o NOME DO EXAME !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtNomeExame.grabFocus();
        } else if (txt2.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o CÓDIGO !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtCodigo.grabFocus();
        } else {
            try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();

            //obter os dados digitados
            String nome = txtNomeExame.getText();
            int codigo = Integer.parseInt(txtCodigo.getText());
            
            ResultSet rs = st.executeQuery("SELECT * FROM ListaExame");
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {
                String codigoExame = rs.getString("NumeroExame");
                if (codigoExame.equalsIgnoreCase(String.valueOf(codigo))) {
                    JOptionPane.showMessageDialog(null, "Este CÓDIGO já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtCodigo.setText("");
                    txtCodigo.grabFocus();
                    return;
                }
                String nomeExame = rs.getString("NomeExame");
                if (nomeExame.equalsIgnoreCase(String.valueOf(nome))) {
                    JOptionPane.showMessageDialog(null, "Este NOME DE EXAME já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtNomeExame.setText("");
                    txtNomeExame.grabFocus();
                    return;
                }
            }

            String comando = "INSERT INTO ListaExame (NomeExame, NumeroExame) VALUES('" + nome + "', " + codigo + ")";

            st.execute(comando);
            JOptionPane.showMessageDialog(null, "Exame INCLUIDO com sucesso !");

            //fecha a conexão2
            st.close();
            c.close();

            limparCampos();
            txtNomeExame.grabFocus();
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado !\n  " + erro.toString());
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
            }
           }
    }//GEN-LAST:event_btnInserirExameActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
        txtNomeExame.grabFocus();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void txtNomeExameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeExameKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)){
            if(!Character.isWhitespace(c)){
                evt.consume();
            }
        }
        int x = 0;
        String nome = txtNomeExame.getText();
        x = nome.length();
        if(x == 45){
            evt.consume();
        }
    }//GEN-LAST:event_txtNomeExameKeyTyped

    private void limparCampos() {
        txtNomeExame.setText("");
        txtCodigo.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormInserirListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormInserirListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormInserirListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormInserirListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormInserirListaExame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInserirExame;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JLabel labCodigo;
    private javax.swing.JLabel labNome;
    private javax.swing.JPanel painel1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNomeExame;
    // End of variables declaration//GEN-END:variables
}
