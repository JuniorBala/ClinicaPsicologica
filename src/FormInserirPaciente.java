/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.HashMap;

public class FormInserirPaciente extends javax.swing.JFrame {
    static int idA;
    static int idC;
    HashMap<String, Integer> myMapA;
    HashMap<String, Integer> myMapC;
    /**
     * Creates new form FormInserirPaciente
     */
    public FormInserirPaciente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupButton = new javax.swing.ButtonGroup();
        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        labRG = new javax.swing.JLabel();
        txtRG = new javax.swing.JTextField();
        labEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        labCEP = new javax.swing.JLabel();
        txtCEP = new javax.swing.JTextField();
        labTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        labCPF = new javax.swing.JLabel();
        txtCPF = new javax.swing.JTextField();
        btnInserirPaciente = new javax.swing.JButton();
        btnLimparCampos = new javax.swing.JButton();
        painel8 = new javax.swing.JPanel();
        labNomeAtendente = new javax.swing.JLabel();
        cbNomeAtendente = new javax.swing.JComboBox();
        labClinicaExterna = new javax.swing.JLabel();
        comboListaClinicas = new javax.swing.JComboBox();
        rbNao = new javax.swing.JRadioButton();
        rbSim = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserir Paciente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Paciente:"));

        labNome.setText("NOME DO PACIENTE :");

        txtNomePaciente.setToolTipText("Inserir Paciente");
        txtNomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePacienteActionPerformed(evt);
            }
        });
        txtNomePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomePacienteKeyTyped(evt);
            }
        });

        labRG.setText("RG:");

        txtRG.setToolTipText("Inserir RG");
        txtRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRGKeyTyped(evt);
            }
        });

        labEndereco.setText("ENDEREÇO :");
        labEndereco.setToolTipText("");

        txtEndereco.setToolTipText("Inserir Endereço");
        txtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEnderecoKeyTyped(evt);
            }
        });

        labCEP.setText("CEP :");

        txtCEP.setToolTipText("Inserir CEP");
        txtCEP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCEPKeyTyped(evt);
            }
        });

        labTelefone.setText("TELEFONE :");

        txtTelefone.setToolTipText("Inserir Telefone");
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyTyped(evt);
            }
        });

        labCPF.setText("CPF: ");
        labCPF.setToolTipText("");

        txtCPF.setToolTipText("Inserir CPF");
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCPFKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labNome)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(labRG)
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labEndereco)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtEndereco)))
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labTelefone)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTelefone))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel1Layout.createSequentialGroup()
                            .addComponent(labCEP)
                            .addGap(18, 18, 18)
                            .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addComponent(labCPF)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labRG)
                    .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labCPF)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labEndereco)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labCEP)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnInserirPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Botoes_Site_5746_Knob_Valid_Blue.png"))); // NOI18N
        btnInserirPaciente.setText("Inserir");
        btnInserirPaciente.setToolTipText("Inserir Paciente");
        btnInserirPaciente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnInserirPacienteStateChanged(evt);
            }
        });
        btnInserirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirPacienteActionPerformed(evt);
            }
        });

        btnLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Refresh.png"))); // NOI18N
        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.setToolTipText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        painel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labNomeAtendente.setText("ATENDENTE :");

        labClinicaExterna.setText("CLÍNICA EXTERNA?");

        comboListaClinicas.setToolTipText("Lista de Clínicas Externa");
        comboListaClinicas.setEnabled(false);
        comboListaClinicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboListaClinicasActionPerformed(evt);
            }
        });

        groupButton.add(rbNao);
        rbNao.setSelected(true);
        rbNao.setText("Nao");
        rbNao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNaoActionPerformed(evt);
            }
        });

        groupButton.add(rbSim);
        rbSim.setText("Sim");
        rbSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel8Layout = new javax.swing.GroupLayout(painel8);
        painel8.setLayout(painel8Layout);
        painel8Layout.setHorizontalGroup(
            painel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel8Layout.createSequentialGroup()
                        .addComponent(labNomeAtendente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel8Layout.createSequentialGroup()
                        .addComponent(labClinicaExterna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbSim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboListaClinicas, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        painel8Layout.setVerticalGroup(
            painel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNomeAtendente)
                    .addComponent(cbNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(painel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labClinicaExterna)
                    .addComponent(comboListaClinicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbNao)
                    .addComponent(rbSim))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInserirPaciente)
                .addGap(18, 18, 18)
                .addComponent(btnLimparCampos)
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserirPaciente)
                    .addComponent(btnLimparCampos))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePacienteActionPerformed

    }//GEN-LAST:event_txtNomePacienteActionPerformed

    private void txtRGKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRGKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String rg = txtRG.getText();
        x = rg.length();
        if(x == 12){
            evt.consume();
        }
    }//GEN-LAST:event_txtRGKeyTyped

    private void txtCEPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCEPKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String cep = txtCEP.getText();
        x = cep.length();
        if(x == 11){
            evt.consume();
        }
    }//GEN-LAST:event_txtCEPKeyTyped

    private void btnInserirPacienteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnInserirPacienteStateChanged

    }//GEN-LAST:event_btnInserirPacienteStateChanged

    private void btnInserirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirPacienteActionPerformed
        String txt1 = txtNomePaciente.getText();
        String txt2 = txtRG.getText();
        String txt3 = txtCPF.getText();
        String txt4 = txtEndereco.getText();
        String txt5 = txtCEP.getText();
        String txt6 = txtTelefone.getText();
        if (txt1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o NOME DO PACIENTE !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtNomePaciente.grabFocus();
        } else if (txt2.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o RG !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtRG.grabFocus();
        } else if (txt3.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o CPF !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtCPF.grabFocus();    
        } else if (txt4.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o ENDEREÇO !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtEndereco.grabFocus();
        } else if (txt5.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe O CEP !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtCEP.grabFocus();
        } else if (txt6.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o Telefone !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtTelefone.grabFocus();
        } else if (cbNomeAtendente.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Não tem ATENDENTE !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            this.dispose();
            FormInserirAtendente inserirAtendente = new FormInserirAtendente();
            inserirAtendente.setVisible(true);
            inserirAtendente.setLocationRelativeTo(null);
        } else if (comboListaClinicas.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Não tem CLÍNICA EXTERNA !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            this.dispose();
            FormInserirClinica inserirClinica = new FormInserirClinica();
            inserirClinica.setVisible(true);
            inserirClinica.setLocationRelativeTo(null);
        } else {
            try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();

            //obter os dados digitados
            String nome = txtNomePaciente.getText();
            String rg = txtRG.getText();
            String cpf = txtCPF.getText();
            String endereco = txtEndereco.getText();
            String cep = txtCEP.getText();
            String telefone = txtTelefone.getText();
            
            ResultSet rs = st.executeQuery("SELECT * FROM Paciente");
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {
                String rgPaciente = rs.getString("RG");
                if (rgPaciente.equalsIgnoreCase(rg)) {
                    JOptionPane.showMessageDialog(null, "Este RG já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtRG.setText("");
                    txtRG.grabFocus();
                    return;
                }
                String cpfPaciente = rs.getString("CPF");
                if (cpfPaciente.equalsIgnoreCase(cpf)) {
                    JOptionPane.showMessageDialog(null, "Este CPF já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtCPF.setText("");
                    txtCPF.grabFocus();
                    return;
                }
                String nomePaciente = rs.getString("NomePaciente");
                if (nomePaciente.equalsIgnoreCase(nome)) {
                    JOptionPane.showMessageDialog(null, "Este NOME já existe !!!", "Erro", JOptionPane.WARNING_MESSAGE);
                    txtNomePaciente.setText("");
                    txtNomePaciente.grabFocus();
                    return;
                }
            }

            String comando = null;
            if(rbSim.isSelected()){
                comando = "INSERT INTO Paciente (NomePaciente, RG, CPF, Endereco, CEP, Telefone, idAtendente, idClinicaExterna) VALUES('" + nome + "', '" + rg + "', '" + cpf +"', '" + endereco + "', " + cep + ", '" + telefone + "', " + myMapA.get(cbNomeAtendente.getSelectedItem()) + ", " + myMapC.get(comboListaClinicas.getSelectedItem()) + ")";
            }else{
                comando = "INSERT INTO Paciente (NomePaciente, RG, CPF, Endereco, CEP, Telefone, idAtendente, idClinicaExterna) VALUES('" + nome + "', '" + rg + "', '" + cpf +"', '" + endereco + "', " + cep + ", '" + telefone + "', " + myMapA.get(cbNomeAtendente.getSelectedItem()) + ", " + null + ")";
            }

            st.execute(comando);
            JOptionPane.showMessageDialog(null, "Paciente INCLUIDO com sucesso !");

            //fecha a conexão2
            st.close();
            c.close();

            limparCampos();
            txtNomePaciente.grabFocus();
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado !\n  " + erro.toString());
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
            }
           }
    }//GEN-LAST:event_btnInserirPacienteActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
        txtNomePaciente.grabFocus();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void txtTelefoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String tel = txtTelefone.getText();
        x = tel.length();
        if(x == 15){
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefoneKeyTyped

    private void comboListaClinicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboListaClinicasActionPerformed

    }//GEN-LAST:event_comboListaClinicasActionPerformed

    private void txtCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String cpf = txtCPF.getText();
        x = cpf.length();
        if(x == 12){
            evt.consume();
        }
    }//GEN-LAST:event_txtCPFKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        myMapA = new HashMap<String, Integer>();
        myMapC = new HashMap<String, Integer>();
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");
            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            // definir o comando SELECt 
            
            ResultSet rs = st.executeQuery("SELECT idAtendente, NomeAtendente FROM Atendente;");
           
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {
                idA = rs.getInt("idAtendente");
                String nomeA = rs.getString("NomeAtendente");
                myMapA.put(nomeA, idA);
                cbNomeAtendente.addItem(nomeA);
            }
            
            ResultSet rp = st.executeQuery("SELECT idClinicaExterna, NomeClinica FROM ClinicaExterna;");
            
            while (rp.next()) {
                idC = rp.getInt("idClinicaExterna");
                String nomeC = rp.getString("NomeClinica");
                myMapC.put(nomeC, idC);
                comboListaClinicas.addItem(nomeC);
            }
            
            //fecha a conexão
            st.close();
            c.close();

        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado!\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    private void rbNaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNaoActionPerformed
        comboListaClinicas.setEnabled(false);
        comboListaClinicas.setSelectedIndex(0);
    }//GEN-LAST:event_rbNaoActionPerformed

    private void rbSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSimActionPerformed
        comboListaClinicas.setEnabled(true);
    }//GEN-LAST:event_rbSimActionPerformed

    private void txtNomePacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomePacienteKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)){
            if(!Character.isWhitespace(c)){
                evt.consume();
            }
        }
        int x = 0;
        String nome = txtNomePaciente.getText();
        x = nome.length();
        if(x == 45){
            evt.consume();
        }
    }//GEN-LAST:event_txtNomePacienteKeyTyped

    private void txtEnderecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoKeyTyped
        int x = 0;
        String endereco = txtEndereco.getText();
        x = endereco.length();
        if(x == 35){
            evt.consume();
        }
    }//GEN-LAST:event_txtEnderecoKeyTyped
    
    private void limparCampos() {
        txtNomePaciente.setText("");
        txtRG.setText("");
        txtCPF.setText("");
        txtEndereco.setText("");
        txtCEP.setText("");
        txtTelefone.setText("");
        cbNomeAtendente.setSelectedIndex(0);
        comboListaClinicas.setSelectedIndex(0);
        rbSim.setSelected(false);
        rbNao.setSelected(true);
        comboListaClinicas.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormInserirPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormInserirPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormInserirPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormInserirPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormInserirPaciente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInserirPaciente;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JComboBox cbNomeAtendente;
    private javax.swing.JComboBox comboListaClinicas;
    private javax.swing.ButtonGroup groupButton;
    private javax.swing.JLabel labCEP;
    private javax.swing.JLabel labCPF;
    private javax.swing.JLabel labClinicaExterna;
    private javax.swing.JLabel labEndereco;
    private javax.swing.JLabel labNome;
    private javax.swing.JLabel labNomeAtendente;
    private javax.swing.JLabel labRG;
    private javax.swing.JLabel labTelefone;
    private javax.swing.JPanel painel1;
    private javax.swing.JPanel painel8;
    private javax.swing.JRadioButton rbNao;
    private javax.swing.JRadioButton rbSim;
    private javax.swing.JTextField txtCEP;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextField txtRG;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
