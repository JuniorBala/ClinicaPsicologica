/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

public class FormRealizarAvaliacao extends javax.swing.JFrame {
    String nomeStatic = null;
    String tiaStatic = null;
    int idAtendente;
    boolean flag = false;
    /**
     * Creates new form FormRealizarAvaliacao
     */
    public FormRealizarAvaliacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomeAtendente = new javax.swing.JTextField();
        labTIA = new javax.swing.JLabel();
        txtTIA = new javax.swing.JTextField();
        painel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAvaliacao = new javax.swing.JTextArea();
        btnAvaliarAtendimento = new javax.swing.JButton();
        painel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPaciente = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Avaliar Atendimento");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Atendente: "));

        labNome.setText("NOME DO ATENDENTE :");

        txtNomeAtendente.setToolTipText("Nome do Atendente");
        txtNomeAtendente.setEnabled(false);
        txtNomeAtendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeAtendenteActionPerformed(evt);
            }
        });

        labTIA.setText("TIA:");

        txtTIA.setToolTipText("TIA");
        txtTIA.setEnabled(false);
        txtTIA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTIAKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labTIA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTIA, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labTIA)
                    .addComponent(txtTIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        painel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Avaliacao:"));
        painel3.setToolTipText("");

        txtAvaliacao.setColumns(20);
        txtAvaliacao.setRows(5);
        txtAvaliacao.setToolTipText("Escrever Avaliação");
        jScrollPane1.setViewportView(txtAvaliacao);

        javax.swing.GroupLayout painel3Layout = new javax.swing.GroupLayout(painel3);
        painel3.setLayout(painel3Layout);
        painel3Layout.setHorizontalGroup(
            painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        painel3Layout.setVerticalGroup(
            painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnAvaliarAtendimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Valid Green.png"))); // NOI18N
        btnAvaliarAtendimento.setText("Avaliar Atendimento");
        btnAvaliarAtendimento.setToolTipText("Avaliar Atendimento");
        btnAvaliarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvaliarAtendimentoActionPerformed(evt);
            }
        });

        painel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pacientes:"));

        tabelaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "RG", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPaciente.setToolTipText("Pacientes");
        jScrollPane2.setViewportView(tabelaPaciente);

        javax.swing.GroupLayout painel2Layout = new javax.swing.GroupLayout(painel2);
        painel2.setLayout(painel2Layout);
        painel2Layout.setHorizontalGroup(
            painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel2Layout.setVerticalGroup(
            painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(btnAvaliarAtendimento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAvaliarAtendimento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeAtendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeAtendenteActionPerformed

    }//GEN-LAST:event_txtNomeAtendenteActionPerformed

    private void txtTIAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTIAKeyTyped

    }//GEN-LAST:event_txtTIAKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        FormProcurarAtendente_Atendimento procurarAtendente = new FormProcurarAtendente_Atendimento();
        String retNome = procurarAtendente.retornoNome;
        String retTIA = procurarAtendente.retornoTIA;
        txtAvaliacao.grabFocus();
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");
            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            // definir o comando SELECt 
            
            ResultSet rs = null;
            if(retNome == null){
                rs = st.executeQuery("SELECT * FROM Atendente WHERE TIA = '" + retTIA + "';");
                tiaStatic = retTIA;
            }else if(retTIA == null){
                rs = st.executeQuery("SELECT * FROM Atendente WHERE NomeAtendente = '" + retNome + "';");
                nomeStatic = retNome;
            }
            
            procurarAtendente.retornoNome = null;
            procurarAtendente.retornoTIA = null;
            
            String nome = null;
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {

                idAtendente = rs.getInt("idAtendente");
                nome = rs.getString("NomeAtendente");
                String tia = rs.getString("TIA");
                String texto = rs.getString("Avaliacao");

                txtNomeAtendente.setText(nome);
                txtTIA.setText(tia);
                
                if(texto != null){
                    txtAvaliacao.setText(texto);
                    flag = true;
                }else{
                    txtAvaliacao.setText("");
                    flag = false;
                }
                
            }
            if(nome == null){
                JOptionPane.showMessageDialog(null, "Desculpe! O ATENDENTE não existe.", "Erro", JOptionPane.WARNING_MESSAGE);
                this.dispose();
                procurarAtendente.setVisible(true);
                procurarAtendente.setLocationRelativeTo(null);
            }
            
            String sql = "SELECT NomePaciente, RG, Telefone FROM Paciente WHERE idAtendente = " + idAtendente + ";";
                
            ResultSet rt = st.executeQuery(sql);
            
            DefaultTableModel model =  new DefaultTableModel();
            model.setColumnIdentifiers(new Object[]{"Nome do Paciente", "RG", "Telefone"});
            
            while (rt.next()) {
                String nomeExame = rt.getString("NomePaciente");
                String rg = rt.getString("RG");
                String telefone = rt.getString("Telefone");
                
                model.addRow(new Object[]{nomeExame, rg, telefone});
            }
            
            tabelaPaciente.setModel(model);
           
            //fecha a conexão
            st.close();
            c.close();
            
        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado!\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnAvaliarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvaliarAtendimentoActionPerformed
        FormProcurarAtendente_Atendimento procurarAtendente = new FormProcurarAtendente_Atendimento();
        String retNome = procurarAtendente.retornoNome;
        String retTIA = procurarAtendente.retornoTIA;
        String avaliacao = txtAvaliacao.getText();
        if (avaliacao.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe a Avaliação !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtAvaliacao.grabFocus();
        } else {    
            try {
                // fazer a conexão com o banco de dados
                Class.forName("com.mysql.jdbc.Driver");
                Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

                //definir um objeto para uso dos comandos SQL
                Statement st = c.createStatement();

                //obter os dados digitados
                String texto = txtAvaliacao.getText();
                
                String comando = null;
                if (nomeStatic == null) {
                    comando = "UPDATE Atendente SET Avaliacao = '" + texto + "' WHERE TIA = '" + tiaStatic + "';";
                } else if (tiaStatic == null) {
                    comando = "UPDATE Atendente SET Avaliacao = '" + texto + "' WHERE NomeAtendente = '" + nomeStatic + "';";
                }
                
                //String comando = "UPDATE ClinicaExterna SET NomeClinica = '" + nome + "', CNPJ = '" + cnpj + "', Endereco = '" + endereco + "', CEP = " + cep + ", Telefone = '" + telefone + "' WHERE CNPJ = " + retCNPJ + ";";
                //String comando = "UPDATE professor SET nomeProf = ' " + nome + " ', drtProf = ' " + drt + " ', digitoProf = ' " + digito + " ', salarioProf = ' " + salario + " ', qntAulasProf = ' " + qntAulas + " ', salarioExtraProf = ' " + salarioExtra + " ' WHERE drtProf = ' " + retDRT + " ';";
                
                st.execute(comando);
                if(flag == false){
                    JOptionPane.showMessageDialog(null, "Avaliação INSERIDA com sucesso !");
                }else{
                    JOptionPane.showMessageDialog(null, "Avaliação ALTERADA com sucesso !");
                }
                //fecha a conexão2
                st.close();
                c.close();
                
                procurarAtendente.retornoNome = null;
                procurarAtendente.retornoTIA = null;

                this.dispose();
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null,
                        " Driver JDBC não encontrado !\n  " + erro.toString());

            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null,
                        " Problemas na conexão com a fonte de dados!\n" + erro.toString());
            }
        }
    }//GEN-LAST:event_btnAvaliarAtendimentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRealizarAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRealizarAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRealizarAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRealizarAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRealizarAvaliacao().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvaliarAtendimento;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labNome;
    private javax.swing.JLabel labTIA;
    private javax.swing.JPanel painel1;
    private javax.swing.JPanel painel2;
    private javax.swing.JPanel painel3;
    private javax.swing.JTable tabelaPaciente;
    private javax.swing.JTextArea txtAvaliacao;
    private javax.swing.JTextField txtNomeAtendente;
    private javax.swing.JTextField txtTIA;
    // End of variables declaration//GEN-END:variables
}
