/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;

public class FormAlterarListaExame extends javax.swing.JFrame {
    String nomeStatic = null;
    String codStatic = null;
    /**
     * Creates new form FormAlterarListaExame
     */
    public FormAlterarListaExame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomeExame = new javax.swing.JTextField();
        labCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnAtualizarExame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alterar Exame");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Exame:"));

        labNome.setText("NOME DO EXAME :");

        txtNomeExame.setToolTipText("Inserir Nome do Exame");
        txtNomeExame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeExameActionPerformed(evt);
            }
        });
        txtNomeExame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeExameKeyTyped(evt);
            }
        });

        labCodigo.setText("CÓDIGO :");

        txtCodigo.setToolTipText("Inserir Código");
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeExame, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomeExame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAtualizarExame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Refresh.png"))); // NOI18N
        btnAtualizarExame.setText("Atualizar Campos");
        btnAtualizarExame.setToolTipText("Atualizar Campos");
        btnAtualizarExame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarExameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(btnAtualizarExame)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtualizarExame)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeExameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeExameActionPerformed

    }//GEN-LAST:event_txtNomeExameActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        int x = 0;
        String codigo = txtCodigo.getText();
        x = codigo.length();
        if(x == 11){
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void btnAtualizarExameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarExameActionPerformed
        String txt1 = txtNomeExame.getText();
        String txt2 = txtCodigo.getText();
        if (txt1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o NOME DO EXAME !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtNomeExame.grabFocus();
        } else if (txt2.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o CÓDIGO DO EXAME !!!", "Erro", JOptionPane.WARNING_MESSAGE);
            txtCodigo.grabFocus();
        } else {
            FormProcurarExame_Alterar procurarExame = new FormProcurarExame_Alterar();
            String retNome = procurarExame.retornoNome;
            String retCod = procurarExame.retornoCodigo;
        try {
                // fazer a conexão com o banco de dados
                Class.forName("com.mysql.jdbc.Driver");
                Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

                //definir um objeto para uso dos comandos SQL
                Statement st = c.createStatement();

                //obter os dados digitados
                String nome = txtNomeExame.getText();
                String codigo = txtCodigo.getText();

                String comando = null;
                if (nomeStatic == null) {
                    comando = "UPDATE ListaExame SET NomeExame = '" + nome + "', NumeroExame = " + codigo + " WHERE NumeroExame = " + codStatic + ";";
                } else if (codStatic == null) {
                    comando = "UPDATE ListaExame SET NomeExame = '" + nome + "', NumeroExame = " + codigo + " WHERE NomeExame = '" + nomeStatic + "';";
                }
                //String comando = "UPDATE ClinicaExterna SET NomeClinica = '" + nome + "', CNPJ = '" + cnpj + "', Endereco = '" + endereco + "', CEP = " + cep + ", Telefone = '" + telefone + "' WHERE CNPJ = " + retCNPJ + ";";
                //String comando = "UPDATE professor SET nomeProf = ' " + nome + " ', drtProf = ' " + drt + " ', digitoProf = ' " + digito + " ', salarioProf = ' " + salario + " ', qntAulasProf = ' " + qntAulas + " ', salarioExtraProf = ' " + salarioExtra + " ' WHERE drtProf = ' " + retDRT + " ';";
                
                st.execute(comando);
                JOptionPane.showMessageDialog(null, "Exame ALTERADO com sucesso !");

                //fecha a conexão2
                st.close();
                c.close();
                
                procurarExame.retornoNome = null;
                procurarExame.retornoCodigo = null;

                this.dispose();
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null,
                        " Driver JDBC não encontrado !\n  " + erro.toString());

            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null,
                        " Problemas na conexão com a fonte de dados!\n" + erro.toString());
            }
        }
    }//GEN-LAST:event_btnAtualizarExameActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        FormProcurarExame_Alterar procurarExame = new FormProcurarExame_Alterar();
            String retNome = procurarExame.retornoNome;
            String retCod = procurarExame.retornoCodigo;
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");
            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            // definir o comando SELECt 
            
            ResultSet rs = null;
            if(retNome == null){
                rs = st.executeQuery("SELECT * FROM ListaExame WHERE NumeroExame = " + retCod + ";");
                codStatic = retCod;
            }else if(retCod == null){
                rs = st.executeQuery("SELECT * FROM ListaExame WHERE NomeExame = '" + retNome + "';");
                nomeStatic = retNome;
            }
            
            procurarExame.retornoNome = null;
            procurarExame.retornoCodigo = null;
            
            String nome = null;
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {

                nome = rs.getString("NomeExame");
                String codigo = rs.getString("NumeroExame");

                txtNomeExame.setText(nome);
                txtCodigo.setText(String.valueOf(codigo));
            }
            if(nome == null){
                JOptionPane.showMessageDialog(null, "Desculpe! O EXAME não existe.", "Erro", JOptionPane.WARNING_MESSAGE);
                this.dispose();
                procurarExame.setVisible(true);
                procurarExame.setLocationRelativeTo(null);
            }
            //fecha a conexão
            st.close();
            c.close();

        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado!\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtNomeExameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeExameKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)){
            if(!Character.isWhitespace(c)){
                evt.consume();
            }
        }
        int x = 0;
        String nome = txtNomeExame.getText();
        x = nome.length();
        if(x == 45){
            evt.consume();
        }
    }//GEN-LAST:event_txtNomeExameKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAlterarListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAlterarListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAlterarListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAlterarListaExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAlterarListaExame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarExame;
    private javax.swing.JLabel labCodigo;
    private javax.swing.JLabel labNome;
    private javax.swing.JPanel painel1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNomeExame;
    // End of variables declaration//GEN-END:variables
}
