/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;

public class FormVerificarAgenda extends javax.swing.JFrame {
    static int idExame;
    static int idPaciente;
    static ArrayList<Integer> nomeP = new ArrayList<Integer>();
    static ArrayList<Integer> nomeE = new ArrayList<Integer>();
    /**
     * Creates new form FormVerificarAgenda
     */
    public FormVerificarAgenda() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAgenda = new javax.swing.JTable();
        btnIncluir = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agenda");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Agenda:"));

        tblAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Dia", "Mes", "Hora", "Minutos", "Exame", "Paciente", "Ano"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAgenda.setToolTipText("");
        tblAgenda.setEnabled(false);
        jScrollPane2.setViewportView(tblAgenda);

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Valid Green.png"))); // NOI18N
        btnIncluir.setText("Incluir Agendamento");
        btnIncluir.setToolTipText("Incluir Agendamento");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mult.png"))); // NOI18N
        btnExcluir.setText("Excluir Agendamento");
        btnExcluir.setToolTipText("Excluir Agendamento");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnExcluir))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // fazer a conexão com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            
            String sql = "SELECT * FROM Agenda ORDER BY Dia,Mes,Ano ASC";
            ResultSet rs = st.executeQuery(sql);
            
            DefaultTableModel model =  new DefaultTableModel();
            model.setColumnIdentifiers(new Object[]{"Dia", "Mês", "Hora", "Minutos", "Exame", "Paciente", "Ano"});
            
            while (rs.next()) {
                String dia = rs.getString("Dia");
                String mes = rs.getString("Mes");
                String hora = rs.getString("Hora");
                String min = rs.getString("Min");
                idExame = rs.getInt("idExame");
                nomeE.add(idExame);
                idPaciente = rs.getInt("idPaciente");
                nomeP.add(idPaciente);
                String ano = rs.getString("Ano");
                
                model.addRow(new Object[]{dia, mes, hora, min, null, null, ano});
                //model.addRow(new Object[]{dia, mes, hora, min, idExame, idPaciente, ano});
            }
            
            for(int i=0; i<nomeE.size(); i++){
                ResultSet rp = st.executeQuery("SELECT NomeExame FROM ListaExame WHERE idExame = " + nomeE.get(i) + ";");
            
                while (rp.next()) {
                    String nomeExame = rp.getString("NomeExame");  
                    
                    model.setValueAt(nomeExame, i, 4);
                }   
            }   
           
            for(int j=0; j<nomeP.size(); j++){
                ResultSet rt = st.executeQuery("SELECT NomePaciente FROM Paciente WHERE idPaciente = " + nomeP.get(j) + ";");
                
                while (rt.next()) {
                    String nomePaciente = rt.getString("NomePaciente"); 
                    
                    model.setValueAt(nomePaciente, j, 5);
                }
            }
            
            tblAgenda.setModel(model);
           
            //fecha a conexão2
            st.close();
            c.close();
            
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null, " Driver JDBC não encontrado !\n  " + erro.toString());
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, " Problemas na conexão com a fonte de dados!\n" + erro.toString());
            }           
    }//GEN-LAST:event_formWindowOpened

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        FormProcurarPaciente_Agenda_Incluir incluirAgenda = new FormProcurarPaciente_Agenda_Incluir();
        incluirAgenda.setVisible(true);
        incluirAgenda.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       
    }//GEN-LAST:event_formWindowActivated

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
       
    }//GEN-LAST:event_formWindowDeactivated

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        FormProcurarPaciente_Agenda_Excluir excluirAgenda = new FormProcurarPaciente_Agenda_Excluir();
        excluirAgenda.setVisible(true);
        excluirAgenda.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        nomeE.clear();
        nomeP.clear();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormVerificarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormVerificarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormVerificarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormVerificarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormVerificarAgenda().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel painel1;
    private javax.swing.JTable tblAgenda;
    // End of variables declaration//GEN-END:variables
}
