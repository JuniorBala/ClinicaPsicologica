/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick Felipi Cursino Fonseca - TIA: 3125393-8
 */

import javax.swing.*;
import java.text.*;
import java.sql.*;

public class FormRealizarTriagem extends javax.swing.JFrame {
    String rgStatic = null;
    String cpfStatic = null;
    boolean flag = false;
    /**
     * Creates new form FormRealizarTriagem
     */
    public FormRealizarTriagem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        painel1 = new javax.swing.JPanel();
        labNome = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        labRG = new javax.swing.JLabel();
        txtRG = new javax.swing.JTextField();
        painel2 = new javax.swing.JPanel();
        labTriagem = new javax.swing.JLabel();
        rbSim = new javax.swing.JRadioButton();
        rbNao = new javax.swing.JRadioButton();
        btnValidarTriagem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Triagem");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Paciente: "));

        labNome.setText("NOME DO PACIENTE :");

        txtNomePaciente.setToolTipText("Inserir Nome do Paciente");
        txtNomePaciente.setEnabled(false);
        txtNomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePacienteActionPerformed(evt);
            }
        });

        labRG.setText("RG:");

        txtRG.setToolTipText("RG");
        txtRG.setEnabled(false);
        txtRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRGKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel1Layout.createSequentialGroup()
                        .addComponent(labRG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNome)
                    .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labRG)
                    .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        painel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labTriagem.setText("TRIAGEM REALIZADA? ");

        buttonGroup.add(rbSim);
        rbSim.setText("Sim");

        buttonGroup.add(rbNao);
        rbNao.setSelected(true);
        rbNao.setText("Nao");

        javax.swing.GroupLayout painel2Layout = new javax.swing.GroupLayout(painel2);
        painel2.setLayout(painel2Layout);
        painel2Layout.setHorizontalGroup(
            painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labTriagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbSim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbNao)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel2Layout.setVerticalGroup(
            painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labTriagem)
                    .addComponent(rbSim)
                    .addComponent(rbNao))
                .addContainerGap())
        );

        btnValidarTriagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Knob Valid Green.png"))); // NOI18N
        btnValidarTriagem.setText("Validar");
        btnValidarTriagem.setToolTipText("Validar Triagem");
        btnValidarTriagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarTriagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(btnValidarTriagem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnValidarTriagem)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePacienteActionPerformed

    }//GEN-LAST:event_txtNomePacienteActionPerformed

    private void txtRGKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRGKeyTyped

    }//GEN-LAST:event_txtRGKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        FormProcurarPaciente_Triagem procurarPaciente = new FormProcurarPaciente_Triagem();
        String retRG = procurarPaciente.retornoRG;
        String retCPF = procurarPaciente.retornoCPF;
        try {
            // fazer a conex√£o com o banco de dados
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");
            //definir um objeto para uso dos comandos SQL
            Statement st = c.createStatement();
            // definir o comando SELECt 
            
            ResultSet rs = null;
            if(retRG == null){
                rs = st.executeQuery("SELECT * FROM Paciente WHERE CPF = '" + retCPF + "';");
                cpfStatic = retCPF;
            }else if(retCPF == null){
                rs = st.executeQuery("SELECT * FROM Paciente WHERE RG = '" + retRG + "';");
                rgStatic = retRG;
            }
            
            procurarPaciente.retornoRG = null;
            procurarPaciente.retornoCPF = null;
            
            String nome = null;
            // Ler cada registro da tabela para exibir no JTextArea
            while (rs.next()) {

                nome = rs.getString("NomePaciente");
                String rg = rs.getString("RG");
                int triagem = rs.getInt("Triagem");

                txtNomePaciente.setText(nome);
                txtRG.setText(rg);
                
                if(triagem == 1){
                    rbSim.setSelected(true);
                    rbNao.setSelected(false);
                    flag = true;
                }else{
                    rbSim.setSelected(false);
                    rbNao.setSelected(true);
                    flag = false;
                }
            }
            if(nome == null){
                JOptionPane.showMessageDialog(null, "Desculpe! O PACIENTE n√£o existe.", "Erro", JOptionPane.WARNING_MESSAGE);
                this.dispose();
                procurarPaciente.setVisible(true);
                procurarPaciente.setLocationRelativeTo(null);
            }
           
            //fecha a conex√£o
            st.close();
            c.close();
            
        } catch (ClassNotFoundException erro) {
            JOptionPane.showMessageDialog(null, " Driver JDBC n√£o encontrado!\n  " + erro.toString());
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, " Problemas na conex√£o com a fonte de dados!\n" + erro.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnValidarTriagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarTriagemActionPerformed
        FormProcurarPaciente_Triagem procurarPaciente = new FormProcurarPaciente_Triagem();
        String retRG = procurarPaciente.retornoRG;
        String retCPF = procurarPaciente.retornoCPF;
            try {
                // fazer a conex√£o com o banco de dados
                Class.forName("com.mysql.jdbc.Driver");
                Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Clinica", "root", "administrador");

                //definir um objeto para uso dos comandos SQL
                Statement st = c.createStatement();

                //obter os dados digitados
                int chave = 0;
                if(rbSim.isSelected()){
                    chave = 1;
                }else if(rbNao.isSelected()){
                    chave = 0;
                }
                
                String comando = null;
                if (rgStatic == null) {
                    comando = "UPDATE Paciente SET Triagem = " + chave + " WHERE CPF = '" + cpfStatic + "';";
                } else if (cpfStatic == null) {
                    comando = "UPDATE Paciente SET Triagem = " + chave + " WHERE RG = '" + rgStatic + "';";
                }
                
                //String comando = "UPDATE ClinicaExterna SET NomeClinica = '" + nome + "', CNPJ = '" + cnpj + "', Endereco = '" + endereco + "', CEP = " + cep + ", Telefone = '" + telefone + "' WHERE CNPJ = " + retCNPJ + ";";
                //String comando = "UPDATE professor SET nomeProf = ' " + nome + " ', drtProf = ' " + drt + " ', digitoProf = ' " + digito + " ', salarioProf = ' " + salario + " ', qntAulasProf = ' " + qntAulas + " ', salarioExtraProf = ' " + salarioExtra + " ' WHERE drtProf = ' " + retDRT + " ';";
                
                st.execute(comando);
                if(flag == false){
                    JOptionPane.showMessageDialog(null, "Triagem INSERIDA com sucesso !");
                }else{
                    JOptionPane.showMessageDialog(null, "Triagem ALTERADA com sucesso !");
                }
                //fecha a conex√£o2
                st.close();
                c.close();
                
                procurarPaciente.retornoRG = null;
                procurarPaciente.retornoCPF = null;

                this.dispose();
            } catch (ClassNotFoundException erro) {
                JOptionPane.showMessageDialog(null,
                        " Driver JDBC n√£o encontrado !\n  " + erro.toString());

            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null,
                        " Problemas na conex√£o com a fonte de dados!\n" + erro.toString());
            }
    }//GEN-LAST:event_btnValidarTriagemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRealizarTriagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRealizarTriagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRealizarTriagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRealizarTriagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRealizarTriagem().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnValidarTriagem;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel labNome;
    private javax.swing.JLabel labRG;
    private javax.swing.JLabel labTriagem;
    private javax.swing.JPanel painel1;
    private javax.swing.JPanel painel2;
    private javax.swing.JRadioButton rbNao;
    private javax.swing.JRadioButton rbSim;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextField txtRG;
    // End of variables declaration//GEN-END:variables
}
